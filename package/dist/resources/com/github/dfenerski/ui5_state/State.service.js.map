{"version":3,"file":"State.service.js","names":["E_MODEL_EXISTS","___misc_errors","ModelFactory","___model_factory_Modelfactory","StateService","constructor","_ref","registrationToken","componentRef","skipRegistration","existingModelRef","rest","this","_model","createModel","_registrationToken","_component","register","_data","getData","state","dataLoaded","component","getModel","setModel","set","data","setData","__exports","__esModule"],"sources":["State.service.ts"],"sourcesContent":["import type Component from 'sap/ui/core/Component';\nimport JSONModel from 'sap/ui/model/json/JSONModel';\nimport type { ICreateNamedModel } from './interfaces/ICreateNamedModel';\nimport { E_MODEL_EXISTS } from './misc/errors';\nimport { ModelFactory } from './model-factory/Model.factory';\nimport type { DeepPartial } from './types/DeepPartial';\nimport type { DeepReadonly } from './types/DeepReadonly';\n\nexport abstract class StateService<T extends {}> {\n    /**\n     * The registrationToken of the model. Must be unique, otherwise registration to the component in the constructor will fail.\n     */\n    private readonly _registrationToken: string;\n\n    /**\n     * The component reference.\n     */\n    protected readonly _component: Component;\n\n    /**\n     * The native model instance.\n     */\n    protected readonly _model: JSONModel;\n\n    constructor({\n        registrationToken,\n        componentRef,\n        skipRegistration,\n        existingModelRef,\n        ...rest\n    }: ICreateNamedModel<T>) {\n        // Create model trough factory method, save reference\n        this._model = existingModelRef || ModelFactory.createModel(rest);\n        // Save registration token reference\n        this._registrationToken = registrationToken;\n        //\n        this._component = componentRef;\n        skipRegistration || this.register();\n    }\n\n    /**\n     * Generic getter for the model's data. Proxied call to the native model's getData method.\n     */\n    protected get _data(): T {\n        return <T>this._model.getData();\n    }\n\n    /**\n     * Generic getter for the model's data. Returns immutable ref to the data; setters should be used for modifications.\n     */\n    public get state(): DeepReadonly<T> {\n        return <DeepReadonly<T>>this._data;\n    }\n\n    /**\n     * Getter for the state service's registration token.\n     */\n    public get registrationToken(): string {\n        return this._registrationToken;\n    }\n\n    /**\n     * Returns a `Promise` of the current data-loading state. Every currently running `sap.ui.model.json.JSONModel#loadData` call is respected by the returned `Promise`.\n     * This also includes a potential `loadData` call from the `JSONModel`'s constructor in case a URL was given. The data-loaded `Promise` will resolve once all running requests have finished.\n     * Only request, which have been queued up to the point of calling this function will be respected by the returned `Promise`.\n     * @returns â€” a `Promise`, which resolves if all pending data-loading requests have finished\n     */\n    public dataLoaded() {\n        return this._model.dataLoaded();\n    }\n\n    /**\n     * Utility hook for delayed model registration when such is requested in the constructor.\n     */\n    public register() {\n        const component = this._component;\n        const registrationToken = this.registrationToken;\n        // Abort if model is already registered.\n        if (component.getModel(registrationToken)) {\n            throw E_MODEL_EXISTS;\n        }\n        // Register model to the component.\n        component.setModel(this._model, registrationToken);\n    }\n\n    /**\n     * Generic setter for the model's data. Merges the provided data with the existing data natively.\n     */\n    protected set(data: DeepPartial<T>): void {\n        this._model.setData(data, true);\n    }\n}\n"],"mappings":"8GAGSA,EAAcC,EAAA,wBACdC,EAAYC,EAAA,gBAId,MAAeC,EAgBlBC,YAAWC,GAMc,IANbC,kBACRA,EAAiBC,aACjBA,EAAYC,iBACZA,EAAgBC,iBAChBA,KACGC,GACgBL,EAEnBM,KAAKC,OAASH,GAAoBR,EAAaY,YAAYH,GAE3DC,KAAKG,mBAAqBR,EAE1BK,KAAKI,WAAaR,EAClBC,GAAoBG,KAAKK,UAC7B,CAKA,SAAcC,GACV,OAAUN,KAAKC,OAAOM,SAC1B,CAKA,SAAWC,GACP,OAAwBR,KAAKM,KACjC,CAKA,qBAAWX,GACP,OAAOK,KAAKG,kBAChB,CAQOM,aACH,OAAOT,KAAKC,OAAOQ,YACvB,CAKOJ,WACH,MAAMK,EAAYV,KAAKI,WACvB,MAAMT,EAAoBK,KAAKL,kBAE/B,GAAIe,EAAUC,SAAShB,GAAoB,CACvC,MAAMP,CACV,CAEAsB,EAAUE,SAASZ,KAAKC,OAAQN,EACpC,CAKUkB,IAAIC,GACVd,KAAKC,OAAOc,QAAQD,EAAM,KAC9B,EACH,IAAAE,EAAA,CAAAC,WAAA,MAAAD,EAAAxB,eAAA,OAAAwB,CAAA","ignoreList":[]}