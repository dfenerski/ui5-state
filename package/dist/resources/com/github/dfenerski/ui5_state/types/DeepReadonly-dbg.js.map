{"version":3,"file":"DeepReadonly-dbg.js","names":[],"sources":["DeepReadonly.ts"],"sourcesContent":["type ReadonlyPrimitive =\r\n    | undefined\r\n    | null\r\n    | boolean\r\n    | string\r\n    | number\r\n    | Function;\r\ntype DeepReadonlyArray<T> = ReadonlyArray<DeepReadonly<T>>;\r\ntype DeepReadonlyMap<K, V> = ReadonlyMap<DeepReadonly<K>, DeepReadonly<V>>;\r\ntype DeepReadonlySet<T> = ReadonlySet<DeepReadonly<T>>;\r\ntype DeepReadonlyObject<T> = {\r\n    readonly [K in keyof T]: DeepReadonly<T[K]>;\r\n};\r\n\r\nexport type DeepReadonly<T> = T extends ReadonlyPrimitive\r\n    ? T\r\n    : T extends Array<infer U>\r\n    ? DeepReadonlyArray<U>\r\n    : T extends Map<infer K, infer V>\r\n    ? DeepReadonlyMap<K, V>\r\n    : T extends Set<infer M>\r\n    ? DeepReadonlySet<M>\r\n    : DeepReadonlyObject<T>;\r\n"],"mappings":"","ignoreList":[]}